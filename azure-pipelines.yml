trigger:
- main

resources:
- repo: self

variables:
  dockerRegistryServiceConnection: '76eb4425-e122-492c-8448-2a2a1fb75cb4'
  imageRepository: 'jdemehw'
  containerRegistry: 'bestrongexample.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'
  terraformVersion: '1.5.7'
  acr_username: '$(acr_username)'
  acr_password: '$(acr_password)'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      name: Default    # <-- Використовує твій локальний агент!
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

- stage: TerraformPlan
  displayName: "Terraform Plan"
  dependsOn: Build
  condition: |
      or(
        eq(variables['Build.Reason'], 'PullRequest'),
        eq(variables['Build.SourceBranch'], 'refs/heads/main')
      )
  jobs:
  - job: TerraformPlan
    displayName: "Terraform Plan"
    pool:
      name: Default   # <-- Теж локальний агент
    steps:
    - checkout: self

    - script: |
        echo "Installing Terraform"
        sudo dnf install -y wget unzip
        wget https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip
        unzip terraform_${terraformVersion}_linux_amd64.zip
        sudo mv terraform /usr/local/bin/
        terraform -version
      displayName: 'Install Terraform'

    - script: |
        terraform -version
        cd terraform
        terraform init -reconfigure
        terraform plan \
          -var="acr_username=$(acr_username)" \
          -var="acr_password=$(acr_password)"
      displayName: 'Terraform Init & Plan'

- stage: TerraformApply
  displayName: "Terraform Apply"
  dependsOn: TerraformPlan
  condition: |
    and(
      succeeded('TerraformPlan'),
      eq(variables['Build.SourceBranch'], 'refs/heads/main')
    )
  jobs:
  - job: TerraformApply
    displayName: "Terraform Apply"
    pool:
      name: Default   # <-- Локальний агент
    steps:
    - checkout: self

    - script: |
        echo "Installing Terraform..."
        sudo dnf install -y wget unzip
        wget https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip
        unzip terraform_${terraformVersion}_linux_amd64.zip
        sudo mv terraform /usr/local/bin/
        terraform -version
      displayName: 'Install Terraform'

    - script: |
        terraform -version
        cd terraform
        terraform init -reconfigure
        terraform apply -auto-approve \
          -var="acr_username=$(acr_username)" \
          -var="acr_password=$(acr_password)"
      displayName: 'Terraform Init & Apply'
